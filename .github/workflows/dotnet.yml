name: CI/CD Workflow

on: [push]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.100
    
    - name: Build
      run: |
        dotnet restore Sources/OpenLibraryWS_Wrapper.sln
        dotnet build Sources/OpenLibraryWS_Wrapper.sln -c Release --no-restore
        dotnet publish Sources/OpenLibraryWrapper/OpenLibraryWrapper.csproj -c Release --no-restore -o $GITHUB_WORKSPACE/build/release

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.100

    - name: Test
      run: |
        dotnet restore Sources/OpenLibraryWS_Wrapper.sln
        dotnet test Sources/OpenLibraryWS_Wrapper.sln --no-restore

  build-and-push-image:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps: 
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log_in_to_the_Container_registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        
