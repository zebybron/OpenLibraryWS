kind: pipeline
type: docker
name: CICD

trigger:
  event:
    - push

steps:
  - name: build-WS
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - cd Sources/
      - dotnet restore OpenLibraryWS_Wrapper.sln
      - dotnet build OpenLibraryWS_Wrapper.sln -c Release --no-restore

  - name: tests-WS
    image: mcr.microsoft.com/dotnet/sdk:7.0
    commands:
      - cd Sources/Tests/OpenLibraryWrapper_UT
      - dotnet test
    depends_on: [build-WS]



  # - name: generate-and-deploy-docs-WS
  #   image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
  #   failure: ignore
  #   volumes:
  #     - name: docs
  #       path: /docs
  #   commands:
  #    - /entrypoint.sh
  #   depends_on: [build-WS,tests-WS]

  # - name: code-inspection-WS
  #   image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet7
  #   secrets: [ SECRET_SONAR_LOGIN]
  #   settings:
  #     sonar_host: https://codefirst.iut.uca.fr/sonar/
  #     sonar_token:
  #       from_secret: SECRET_SONAR_LOGIN
  #   commands:
  #     - cd Sources/
  #     - dotnet restore OpenLibraryWS_Wrapper.sln
  #     - dotnet sonarscanner begin /k:WS1_Enzo_Jolys /d:sonar.host.url=$${PLUGIN_SONAR_HOST} /d:sonar.coverageReportPaths="coveragereport/SonarQube.xml" /d:sonar.login=$${PLUGIN_SONAR_TOKEN} 
  #     - dotnet build OpenLibraryWS_Wrapper.sln -c Release --no-restore
  #     - dotnet test OpenLibraryWS_Wrapper.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
  #     - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
  #     - dotnet publish OpenLibraryWS_Wrapper.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
  #     - dotnet sonarscanner end /d:sonar.login=$${PLUGIN_SONAR_TOKEN}
  #   depends_on: [build-WS,tests-WS]

  - name: hadolint-WS
    image: ghcr.io/hadolint/hadolint:latest-alpine
    commands:
      - hadolint Sources/Dockerfile
    depends_on: [ build-WS ]


  # database container deployment
  - name: deploy-container-mysql
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
         IMAGENAME: mariadb:10
         CONTAINERNAME: mysql
         COMMAND: create
         OVERWRITE: true
         PRIVATE: true
         CODEFIRST_CLIENTDRONE_ENV_MARIADB_ROOT_PASSWORD:
           from_secret: db_root_password
         CODEFIRST_CLIENTDRONE_ENV_MARIADB_DATABASE:
           from_secret: db_database
         CODEFIRST_CLIENTDRONE_ENV_MARIADB_USER:
           from_secret: db_user
         CODEFIRST_CLIENTDRONE_ENV_MARIADB_PASSWORD:
           from_secret: db_password
    depends_on: [ hadolint-WS ]


    # docker image build
  - name: docker-build-and-push-WS
    image: plugins/docker
    settings:
       dockerfile: Sources/Dockerfile
       context: Sources/
       registry: hub.codefirst.iut.uca.fr
       repo: hub.codefirst.iut.uca.fr/enzo.jolys/openlibraryws_wrapper
       username:
         from_secret: SECRET_REGISTRY_USERNAME
       password:
         from_secret: SECRET_REGISTRY_PASSWORD
    depends_on: [ deploy-container-mysql ]

      # container deployment
  - name: deploy-container
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
        IMAGENAME: hub.codefirst.iut.uca.fr/enzo.jolys/openlibraryws_wrapper:latest
        CONTAINERNAME: WS_DOTNET
        COMMAND: create
        OVERWRITE: true
        CODEFIRST_CLIENTDRONE_ENV_DB_DATABASE:
           stub
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_ROOT_PASSWORD:
           from_secret: db_root_password
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_DATABASE:
           from_secret: db_database
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_USER:
           from_secret: db_user
        CODEFIRST_CLIENTDRONE_ENV_MARIADB_PASSWORD:
           from_secret: db_password
    depends_on: [ docker-build-and-push-WS ]


  #- name: gen-swagger
   # image: mcr.microsoft.com/dotnet/sdk:7.0
    #commands: 
    #  - cd Sources/
      #- dotnet tool install --version 6.5.0 Swashbuckle.AspNetCore.Cli --tool-path /bin
    #  - dotnet tool install --version 6.5.0 Swashbuckle.AspNetCore.Cli
     # - dotnet swagger tofile --output /docs/swagger.json  $CI_PROJECT_DIR/build/release/OpenLibraryWrapper.dll swagger.json
      #- bin/swagger tofile --output /drone/src/swagger.json bin/Release/net7.0/OpenLibraryWrapper.dll v1
    #depends_on: [build]
  
  #- name: deploy_swagger
  #  image: hub.codefirst.iut.uca.fr/maxime.batista/codefirst-docdeployer
   # commands:
    #  - /entrypoint.sh --type swagger --loc /drone/src/swagger.json
    #depends_on: [gen-swagger]




